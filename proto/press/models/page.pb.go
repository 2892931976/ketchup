// Code generated by protoc-gen-go.
// source: page.proto
// DO NOT EDIT!

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Content_ContentType int32

const (
	Content_unknown  Content_ContentType = 0
	Content_html     Content_ContentType = 1
	Content_markdown Content_ContentType = 2
)

var Content_ContentType_name = map[int32]string{
	0: "unknown",
	1: "html",
	2: "markdown",
}
var Content_ContentType_value = map[string]int32{
	"unknown":  0,
	"html":     1,
	"markdown": 2,
}

func (x Content_ContentType) Enum() *Content_ContentType {
	p := new(Content_ContentType)
	*p = x
	return p
}
func (x Content_ContentType) String() string {
	return proto.EnumName(Content_ContentType_name, int32(x))
}
func (x *Content_ContentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Content_ContentType_value, data, "Content_ContentType")
	if err != nil {
		return err
	}
	*x = Content_ContentType(value)
	return nil
}
func (Content_ContentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{2, 0} }

type Timestamp struct {
	CreatedAt        *int64 `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt        *int64 `protobuf:"varint,2,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Timestamp) Reset()                    { *m = Timestamp{} }
func (m *Timestamp) String() string            { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()               {}
func (*Timestamp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Timestamp) GetCreatedAt() int64 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

func (m *Timestamp) GetUpdatedAt() int64 {
	if m != nil && m.UpdatedAt != nil {
		return *m.UpdatedAt
	}
	return 0
}

type Page struct {
	Uuid             *string           `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name             *string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Theme            *string           `protobuf:"bytes,3,opt,name=theme" json:"theme,omitempty"`
	Template         *string           `protobuf:"bytes,4,opt,name=template" json:"template,omitempty"`
	Timestamps       *Timestamp        `protobuf:"bytes,5,opt,name=timestamps" json:"timestamps,omitempty"`
	PublishedAt      *int64            `protobuf:"varint,6,opt,name=published_at,json=publishedAt" json:"published_at,omitempty"`
	Contents         []*Content        `protobuf:"bytes,10,rep,name=contents" json:"contents,omitempty"`
	Metadata         map[string]string `protobuf:"bytes,11,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags             []string          `protobuf:"bytes,12,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Page) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Page) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Page) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *Page) GetTemplate() string {
	if m != nil && m.Template != nil {
		return *m.Template
	}
	return ""
}

func (m *Page) GetTimestamps() *Timestamp {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *Page) GetPublishedAt() int64 {
	if m != nil && m.PublishedAt != nil {
		return *m.PublishedAt
	}
	return 0
}

func (m *Page) GetContents() []*Content {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *Page) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Page) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// versioned? drafts?
type Content struct {
	Uuid             *string              `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	ContentType      *Content_ContentType `protobuf:"varint,2,opt,name=contentType,enum=press.models.Content_ContentType" json:"contentType,omitempty"`
	Key              *string              `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value            *string              `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	Timestamps       *Timestamp           `protobuf:"bytes,5,opt,name=timestamps" json:"timestamps,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Content) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Content) GetContentType() Content_ContentType {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return Content_unknown
}

func (m *Content) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Content) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Content) GetTimestamps() *Timestamp {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "press.models.Timestamp")
	proto.RegisterType((*Page)(nil), "press.models.Page")
	proto.RegisterType((*Content)(nil), "press.models.Content")
	proto.RegisterEnum("press.models.Content_ContentType", Content_ContentType_name, Content_ContentType_value)
}
func (m *Timestamp) SetCreatedAt(v *int64) {
	m.CreatedAt = v
}

func (m *Timestamp) SetUpdatedAt(v *int64) {
	m.UpdatedAt = v
}

func (m *Page) SetUuid(v *string) {
	m.Uuid = v
}

func (m *Page) SetName(v *string) {
	m.Name = v
}

func (m *Page) SetTheme(v *string) {
	m.Theme = v
}

func (m *Page) SetTemplate(v *string) {
	m.Template = v
}

func (m *Page) SetTimestamps(v *Timestamp) {
	m.Timestamps = v
}

func (m *Page) SetPublishedAt(v *int64) {
	m.PublishedAt = v
}

func (m *Page) SetContents(v []*Content) {
	m.Contents = v
}

func (m *Page) SetMetadata(v map[string]string) {
	m.Metadata = v
}

func (m *Page) SetTags(v []string) {
	m.Tags = v
}

func (m *Content) SetUuid(v *string) {
	m.Uuid = v
}

func (m *Content) SetContentType(v *Content_ContentType) {
	m.ContentType = v
}

func (m *Content) SetKey(v *string) {
	m.Key = v
}

func (m *Content) SetValue(v *string) {
	m.Value = v
}

func (m *Content) SetTimestamps(v *Timestamp) {
	m.Timestamps = v
}

func init() { proto.RegisterFile("page.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x51, 0xcd, 0x4b, 0xc3, 0x30,
	0x14, 0xb7, 0x1f, 0x73, 0xed, 0x6b, 0x95, 0x11, 0x14, 0xcb, 0x40, 0xe8, 0x7a, 0xda, 0xa9, 0x60,
	0x2f, 0x8a, 0x7a, 0x19, 0xc3, 0x83, 0x07, 0x41, 0xca, 0xee, 0x12, 0xd7, 0xb0, 0x8d, 0x35, 0x6d,
	0x68, 0x5e, 0x95, 0xfd, 0xe5, 0xde, 0x44, 0x92, 0x7e, 0xd0, 0xc1, 0x4e, 0x9e, 0xfa, 0xf2, 0xfb,
	0x48, 0x7f, 0xef, 0x17, 0x00, 0x41, 0x37, 0x2c, 0x16, 0x55, 0x89, 0x25, 0xf1, 0x45, 0xc5, 0xa4,
	0x8c, 0x79, 0x99, 0xb1, 0x5c, 0x46, 0xaf, 0xe0, 0xae, 0x76, 0x9c, 0x49, 0xa4, 0x5c, 0x90, 0x5b,
	0x80, 0x75, 0xc5, 0x28, 0xb2, 0xec, 0x83, 0x62, 0x60, 0x84, 0xc6, 0xdc, 0x4a, 0xdd, 0x16, 0x59,
	0xa0, 0xa2, 0x6b, 0x91, 0x75, 0xb4, 0xd9, 0xd0, 0x2d, 0xb2, 0xc0, 0xe8, 0xd7, 0x04, 0xfb, 0x9d,
	0x6e, 0x18, 0x21, 0x60, 0xd7, 0xf5, 0x2e, 0xd3, 0x17, 0xb8, 0xa9, 0x9e, 0x15, 0x56, 0x50, 0xce,
	0xb4, 0xcb, 0x4d, 0xf5, 0x4c, 0xae, 0x60, 0x84, 0x5b, 0xc6, 0x59, 0x60, 0x69, 0xb0, 0x39, 0x90,
	0x29, 0x38, 0xc8, 0xb8, 0xc8, 0x29, 0xb2, 0xc0, 0xd6, 0x44, 0x7f, 0x26, 0xf7, 0x00, 0xd8, 0xa5,
	0x95, 0xc1, 0x28, 0x34, 0xe6, 0x5e, 0x72, 0x13, 0x0f, 0x17, 0x8a, 0xfb, 0x6d, 0xd2, 0x81, 0x94,
	0xcc, 0xc0, 0x17, 0xf5, 0x67, 0xbe, 0x93, 0xdb, 0x26, 0xfc, 0xb9, 0x0e, 0xef, 0xf5, 0xd8, 0x02,
	0xc9, 0x1d, 0x38, 0xeb, 0xb2, 0x40, 0x56, 0xa0, 0x0c, 0x20, 0xb4, 0xe6, 0x5e, 0x72, 0x7d, 0x7c,
	0xf3, 0xb2, 0x61, 0xd3, 0x5e, 0x46, 0x9e, 0xc1, 0xe1, 0x0c, 0x69, 0x46, 0x91, 0x06, 0x9e, 0xb6,
	0x84, 0xc7, 0x16, 0x55, 0x47, 0xfc, 0xd6, 0x4a, 0x5e, 0x0a, 0xac, 0x0e, 0x69, 0xef, 0x50, 0x95,
	0x20, 0xdd, 0xc8, 0xc0, 0x0f, 0x2d, 0x55, 0x89, 0x9a, 0xa7, 0x4f, 0x70, 0x71, 0x24, 0x27, 0x13,
	0xb0, 0xf6, 0xec, 0xd0, 0x56, 0xa9, 0x46, 0xd5, 0xda, 0x17, 0xcd, 0xeb, 0xae, 0xca, 0xe6, 0xf0,
	0x68, 0x3e, 0x18, 0xd1, 0x8f, 0x01, 0xe3, 0x36, 0xe4, 0xc9, 0x37, 0x58, 0x82, 0xd7, 0x46, 0x5f,
	0x1d, 0x44, 0xe3, 0xbf, 0x4c, 0x66, 0x27, 0x97, 0xec, 0xbe, 0x4a, 0x98, 0x0e, 0x5d, 0x5d, 0x20,
	0xeb, 0x44, 0x20, 0x7b, 0x10, 0xe8, 0xdf, 0x4f, 0x15, 0x25, 0xe0, 0x0d, 0x7e, 0x4e, 0x3c, 0x18,
	0xd7, 0xc5, 0xbe, 0x28, 0xbf, 0x8b, 0xc9, 0x19, 0x71, 0xc0, 0xde, 0x22, 0xcf, 0x27, 0x06, 0xf1,
	0xc1, 0xe1, 0xb4, 0xda, 0x67, 0x0a, 0x37, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x2c, 0x21,
	0x3d, 0xe0, 0x02, 0x00, 0x00,
}
