// Code generated by protoc-gen-go.
// source: page.proto
// DO NOT EDIT!

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ContentType int32

const (
	ContentType_unknown  ContentType = 0
	ContentType_html     ContentType = 1
	ContentType_markdown ContentType = 2
)

var ContentType_name = map[int32]string{
	0: "unknown",
	1: "html",
	2: "markdown",
}
var ContentType_value = map[string]int32{
	"unknown":  0,
	"html":     1,
	"markdown": 2,
}

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}
func (x ContentType) String() string {
	return proto.EnumName(ContentType_name, int32(x))
}
func (x *ContentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContentType_value, data, "ContentType")
	if err != nil {
		return err
	}
	*x = ContentType(value)
	return nil
}
func (ContentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Page struct {
	Uuid             *string           `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name             *string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Theme            *string           `protobuf:"bytes,3,opt,name=theme" json:"theme,omitempty"`
	Template         *string           `protobuf:"bytes,4,opt,name=template" json:"template,omitempty"`
	Contents         []*Content        `protobuf:"bytes,10,rep,name=contents" json:"contents,omitempty"`
	Metadata         map[string]string `protobuf:"bytes,11,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags             []string          `protobuf:"bytes,12,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Page) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Page) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Page) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *Page) GetTemplate() string {
	if m != nil && m.Template != nil {
		return *m.Template
	}
	return ""
}

func (m *Page) GetContents() []*Content {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *Page) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Page) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// versioned?
type Content struct {
	Uuid             *string      `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	ContentType      *ContentType `protobuf:"varint,2,opt,name=contentType,enum=press.models.ContentType" json:"contentType,omitempty"`
	Key              *string      `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value            *string      `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Content) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Content) GetContentType() ContentType {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ContentType_unknown
}

func (m *Content) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Content) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Page)(nil), "press.models.Page")
	proto.RegisterType((*Content)(nil), "press.models.Content")
	proto.RegisterEnum("press.models.ContentType", ContentType_name, ContentType_value)
}

var fileDescriptor2 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0x84, 0x50,
	0x14, 0xc5, 0xf3, 0x4f, 0x8c, 0x5d, 0x2d, 0xe4, 0x52, 0xf0, 0x9a, 0x95, 0xcc, 0x6a, 0x68, 0x21,
	0xe4, 0x2a, 0x9a, 0x76, 0xd1, 0x32, 0x08, 0xe9, 0x0b, 0x3c, 0xf2, 0x32, 0x13, 0xea, 0x53, 0xf4,
	0x5a, 0xb8, 0xed, 0xa3, 0xf4, 0x49, 0xc7, 0xa7, 0x8e, 0x38, 0xe0, 0xee, 0xde, 0x73, 0xcf, 0x79,
	0xfc, 0xce, 0x03, 0x28, 0xe5, 0x9e, 0xc2, 0xb2, 0x2a, 0xb8, 0x40, 0xaf, 0xac, 0xa8, 0xae, 0xc3,
	0xbc, 0x48, 0x28, 0xab, 0x37, 0xff, 0x26, 0xd8, 0x1f, 0xdd, 0x11, 0x11, 0xec, 0xa6, 0xf9, 0x4e,
	0x84, 0x11, 0x18, 0xdb, 0xab, 0xb8, 0x9f, 0xb5, 0xa6, 0x64, 0x4e, 0xc2, 0x1c, 0x34, 0x3d, 0xe3,
	0x2d, 0x5c, 0xf2, 0x81, 0x3a, 0xd1, 0xea, 0xc5, 0x61, 0xc1, 0x35, 0x38, 0x4c, 0x79, 0x99, 0x49,
	0x26, 0x61, 0xf7, 0x87, 0x69, 0xc7, 0x47, 0x70, 0xbe, 0x0a, 0xc5, 0xa4, 0xb8, 0x16, 0x10, 0x58,
	0x5b, 0x37, 0xba, 0x0b, 0xe7, 0x0c, 0xe1, 0xeb, 0x70, 0x8d, 0x27, 0x1b, 0xbe, 0x80, 0x93, 0x13,
	0xcb, 0x44, 0xb2, 0x14, 0x6e, 0x1f, 0x09, 0xce, 0x23, 0x1a, 0x39, 0x7c, 0x1f, 0x2d, 0x6f, 0x8a,
	0xab, 0x36, 0x9e, 0x12, 0x1a, 0x9b, 0xe5, 0xbe, 0x16, 0x5e, 0x97, 0xec, 0xb0, 0xf5, 0xbc, 0xde,
	0xc1, 0xf5, 0x99, 0x1d, 0x7d, 0xb0, 0x52, 0x6a, 0xc7, 0xba, 0x7a, 0xd4, 0xcd, 0x7e, 0x64, 0xd6,
	0x9c, 0xea, 0x0e, 0xcb, 0xb3, 0xf9, 0x64, 0x6c, 0xfe, 0x0c, 0x58, 0x8d, 0x90, 0x8b, 0xff, 0xb4,
	0x03, 0x77, 0x44, 0xff, 0x6c, 0xcb, 0x21, 0x7f, 0x13, 0xdd, 0x2f, 0x96, 0xd4, 0x86, 0x78, 0xee,
	0x3e, 0x81, 0x58, 0x0b, 0x20, 0xf6, 0x0c, 0xe4, 0x21, 0x02, 0x77, 0xf6, 0x06, 0xba, 0xb0, 0x6a,
	0x54, 0xaa, 0x8a, 0x5f, 0xe5, 0x5f, 0xa0, 0x03, 0xf6, 0x81, 0xf3, 0xcc, 0x37, 0xd0, 0xeb, 0x7e,
	0x4e, 0x56, 0x69, 0xa2, 0x75, 0xf3, 0x18, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x79, 0xea, 0xfd, 0xf8,
	0x01, 0x00, 0x00,
}
