// Code generated by protoc-gen-go.
// source: theme.proto
// DO NOT EDIT!

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Theme struct {
	Uuid             *string                   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name             *string                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Templates        map[string]*ThemeTemplate `protobuf:"bytes,10,rep,name=templates" json:"templates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Assets           map[string]*ThemeAsset    `protobuf:"bytes,11,rep,name=assets" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *Theme) Reset()                    { *m = Theme{} }
func (m *Theme) String() string            { return proto.CompactTextString(m) }
func (*Theme) ProtoMessage()               {}
func (*Theme) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Theme) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Theme) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Theme) GetTemplates() map[string]*ThemeTemplate {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *Theme) GetAssets() map[string]*ThemeAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type ThemeTemplate struct {
	Uuid   *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Theme  *string `protobuf:"bytes,3,opt,name=theme" json:"theme,omitempty"`
	Engine *string `protobuf:"bytes,4,opt,name=engine,def=html" json:"engine,omitempty"`
	// maybe an option for extensions?
	Data             *string `protobuf:"bytes,10,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThemeTemplate) Reset()                    { *m = ThemeTemplate{} }
func (m *ThemeTemplate) String() string            { return proto.CompactTextString(m) }
func (*ThemeTemplate) ProtoMessage()               {}
func (*ThemeTemplate) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

const Default_ThemeTemplate_Engine string = "html"

func (m *ThemeTemplate) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ThemeTemplate) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ThemeTemplate) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *ThemeTemplate) GetEngine() string {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_ThemeTemplate_Engine
}

func (m *ThemeTemplate) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

type ThemeAsset struct {
	Uuid             *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Theme            *string `protobuf:"bytes,3,opt,name=theme" json:"theme,omitempty"`
	Data             *string `protobuf:"bytes,10,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThemeAsset) Reset()                    { *m = ThemeAsset{} }
func (m *ThemeAsset) String() string            { return proto.CompactTextString(m) }
func (*ThemeAsset) ProtoMessage()               {}
func (*ThemeAsset) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *ThemeAsset) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ThemeAsset) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ThemeAsset) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *ThemeAsset) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Theme)(nil), "press.models.Theme")
	proto.RegisterType((*ThemeTemplate)(nil), "press.models.ThemeTemplate")
	proto.RegisterType((*ThemeAsset)(nil), "press.models.ThemeAsset")
}

var fileDescriptor4 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xc9, 0xbf, 0x42, 0x67, 0x55, 0x64, 0xf1, 0xb0, 0x54, 0xc1, 0x92, 0x53, 0x4f, 0x0b,
	0xf6, 0xa2, 0xf4, 0xa4, 0x07, 0xbf, 0x40, 0xec, 0xc5, 0x8b, 0xb0, 0x90, 0xc1, 0x16, 0xb3, 0x49,
	0xc8, 0x6e, 0x84, 0x9e, 0xfc, 0x9e, 0x7e, 0x1a, 0xdd, 0xd9, 0x94, 0x26, 0xb0, 0x07, 0xc1, 0xdb,
	0xcb, 0xcb, 0x7b, 0xbf, 0x19, 0x76, 0x80, 0xd9, 0x1d, 0x6a, 0x94, 0x6d, 0xd7, 0xd8, 0x86, 0x9f,
	0xb5, 0x1d, 0x1a, 0x23, 0x75, 0x53, 0x62, 0x65, 0xf2, 0xef, 0x18, 0xb2, 0xad, 0xfb, 0xcb, 0x39,
	0xa4, 0x7d, 0xbf, 0x2f, 0x45, 0xb4, 0x8c, 0x56, 0xf3, 0x82, 0xb4, 0xf3, 0x6a, 0xa5, 0x51, 0xc4,
	0xde, 0x73, 0x9a, 0x3f, 0xc2, 0xdc, 0xa2, 0x6e, 0x2b, 0x65, 0xd1, 0x08, 0x58, 0x26, 0x2b, 0xb6,
	0xce, 0xe5, 0x98, 0x29, 0x89, 0x27, 0xb7, 0xc7, 0xd0, 0x73, 0x6d, 0xbb, 0x43, 0x71, 0x2a, 0xf1,
	0x7b, 0x98, 0x29, 0x63, 0xd0, 0x1a, 0xc1, 0xa8, 0x7e, 0x1b, 0xaa, 0x3f, 0x51, 0xc2, 0x77, 0x87,
	0xf8, 0xe2, 0x15, 0x2e, 0xa6, 0x54, 0x7e, 0x09, 0xc9, 0x07, 0x1e, 0x86, 0x9d, 0x9d, 0xe4, 0x77,
	0x90, 0x7d, 0xaa, 0xaa, 0xf7, 0x3b, 0xb3, 0xf5, 0x75, 0x80, 0x7d, 0x64, 0x14, 0x3e, 0xb9, 0x89,
	0x1f, 0xa2, 0xc5, 0x0b, 0xb0, 0xd1, 0xc4, 0x00, 0x57, 0x4e, 0xb9, 0x22, 0xc0, 0x25, 0xc0, 0x08,
	0x9a, 0x7f, 0xc1, 0xf9, 0x64, 0xe0, 0x9f, 0xdf, 0xf8, 0x0a, 0x32, 0x3a, 0x99, 0x48, 0xc8, 0xf4,
	0x1f, 0xfc, 0x06, 0x66, 0x58, 0xbf, 0xef, 0x6b, 0x14, 0xa9, 0xb3, 0x37, 0xe9, 0xce, 0xea, 0xaa,
	0x18, 0x3c, 0xc7, 0x29, 0x95, 0x55, 0xbf, 0x27, 0x21, 0x8e, 0xd3, 0xf9, 0x1b, 0xc0, 0x69, 0xb3,
	0x7f, 0x4e, 0x0f, 0xf0, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x4f, 0xdf, 0xbb, 0x59, 0x02,
	0x00, 0x00,
}
