// Code generated by protoc-gen-go.
// source: theme.proto
// DO NOT EDIT!

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ThemePlaceholder_ThemePlaceholderType int32

const (
	ThemePlaceholder_unknown ThemePlaceholder_ThemePlaceholderType = 0
	ThemePlaceholder_string  ThemePlaceholder_ThemePlaceholderType = 1
	ThemePlaceholder_text    ThemePlaceholder_ThemePlaceholderType = 2
)

var ThemePlaceholder_ThemePlaceholderType_name = map[int32]string{
	0: "unknown",
	1: "string",
	2: "text",
}
var ThemePlaceholder_ThemePlaceholderType_value = map[string]int32{
	"unknown": 0,
	"string":  1,
	"text":    2,
}

func (x ThemePlaceholder_ThemePlaceholderType) Enum() *ThemePlaceholder_ThemePlaceholderType {
	p := new(ThemePlaceholder_ThemePlaceholderType)
	*p = x
	return p
}
func (x ThemePlaceholder_ThemePlaceholderType) String() string {
	return proto.EnumName(ThemePlaceholder_ThemePlaceholderType_name, int32(x))
}
func (x *ThemePlaceholder_ThemePlaceholderType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThemePlaceholder_ThemePlaceholderType_value, data, "ThemePlaceholder_ThemePlaceholderType")
	if err != nil {
		return err
	}
	*x = ThemePlaceholder_ThemePlaceholderType(value)
	return nil
}
func (ThemePlaceholder_ThemePlaceholderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{2, 0}
}

type Theme struct {
	Uuid             *string                   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name             *string                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Templates        map[string]*ThemeTemplate `protobuf:"bytes,10,rep,name=templates" json:"templates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Assets           map[string]*ThemeAsset    `protobuf:"bytes,11,rep,name=assets" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *Theme) Reset()                    { *m = Theme{} }
func (m *Theme) String() string            { return proto.CompactTextString(m) }
func (*Theme) ProtoMessage()               {}
func (*Theme) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Theme) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Theme) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Theme) GetTemplates() map[string]*ThemeTemplate {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *Theme) GetAssets() map[string]*ThemeAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type ThemeTemplate struct {
	Uuid         *string                      `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name         *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Theme        *string                      `protobuf:"bytes,3,opt,name=theme" json:"theme,omitempty"`
	Engine       *string                      `protobuf:"bytes,4,opt,name=engine,def=html" json:"engine,omitempty"`
	Placeholders map[string]*ThemePlaceholder `protobuf:"bytes,5,rep,name=placeholders" json:"placeholders,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// maybe an option for extensions?
	Data             *string `protobuf:"bytes,10,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThemeTemplate) Reset()                    { *m = ThemeTemplate{} }
func (m *ThemeTemplate) String() string            { return proto.CompactTextString(m) }
func (*ThemeTemplate) ProtoMessage()               {}
func (*ThemeTemplate) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

const Default_ThemeTemplate_Engine string = "html"

func (m *ThemeTemplate) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ThemeTemplate) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ThemeTemplate) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *ThemeTemplate) GetEngine() string {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_ThemeTemplate_Engine
}

func (m *ThemeTemplate) GetPlaceholders() map[string]*ThemePlaceholder {
	if m != nil {
		return m.Placeholders
	}
	return nil
}

func (m *ThemeTemplate) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

type ThemePlaceholder struct {
	Name             *string                                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type             *ThemePlaceholder_ThemePlaceholderType `protobuf:"varint,2,opt,name=type,enum=press.models.ThemePlaceholder_ThemePlaceholderType" json:"type,omitempty"`
	ContentType      *Content_ContentType                   `protobuf:"varint,3,opt,name=contentType,enum=press.models.Content_ContentType" json:"contentType,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *ThemePlaceholder) Reset()                    { *m = ThemePlaceholder{} }
func (m *ThemePlaceholder) String() string            { return proto.CompactTextString(m) }
func (*ThemePlaceholder) ProtoMessage()               {}
func (*ThemePlaceholder) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *ThemePlaceholder) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ThemePlaceholder) GetType() ThemePlaceholder_ThemePlaceholderType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ThemePlaceholder_unknown
}

func (m *ThemePlaceholder) GetContentType() Content_ContentType {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return Content_unknown
}

type ThemeAsset struct {
	Uuid             *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Theme            *string `protobuf:"bytes,3,opt,name=theme" json:"theme,omitempty"`
	Data             *string `protobuf:"bytes,10,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThemeAsset) Reset()                    { *m = ThemeAsset{} }
func (m *ThemeAsset) String() string            { return proto.CompactTextString(m) }
func (*ThemeAsset) ProtoMessage()               {}
func (*ThemeAsset) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *ThemeAsset) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ThemeAsset) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ThemeAsset) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *ThemeAsset) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Theme)(nil), "press.models.Theme")
	proto.RegisterType((*ThemeTemplate)(nil), "press.models.ThemeTemplate")
	proto.RegisterType((*ThemePlaceholder)(nil), "press.models.ThemePlaceholder")
	proto.RegisterType((*ThemeAsset)(nil), "press.models.ThemeAsset")
	proto.RegisterEnum("press.models.ThemePlaceholder_ThemePlaceholderType", ThemePlaceholder_ThemePlaceholderType_name, ThemePlaceholder_ThemePlaceholderType_value)
}
func (m *Theme) SetUuid(v *string) {
	m.Uuid = v
}

func (m *Theme) SetName(v *string) {
	m.Name = v
}

func (m *Theme) SetTemplates(v map[string]*ThemeTemplate) {
	m.Templates = v
}

func (m *Theme) SetAssets(v map[string]*ThemeAsset) {
	m.Assets = v
}

func (m *ThemeTemplate) SetUuid(v *string) {
	m.Uuid = v
}

func (m *ThemeTemplate) SetName(v *string) {
	m.Name = v
}

func (m *ThemeTemplate) SetTheme(v *string) {
	m.Theme = v
}

func (m *ThemeTemplate) SetEngine(v *string) {
	m.Engine = v
}

func (m *ThemeTemplate) SetPlaceholders(v map[string]*ThemePlaceholder) {
	m.Placeholders = v
}

func (m *ThemeTemplate) SetData(v *string) {
	m.Data = v
}

func (m *ThemePlaceholder) SetName(v *string) {
	m.Name = v
}

func (m *ThemePlaceholder) SetType(v *ThemePlaceholder_ThemePlaceholderType) {
	m.Type = v
}

func (m *ThemePlaceholder) SetContentType(v *Content_ContentType) {
	m.ContentType = v
}

func (m *ThemeAsset) SetUuid(v *string) {
	m.Uuid = v
}

func (m *ThemeAsset) SetName(v *string) {
	m.Name = v
}

func (m *ThemeAsset) SetTheme(v *string) {
	m.Theme = v
}

func (m *ThemeAsset) SetData(v *string) {
	m.Data = v
}

func init() { proto.RegisterFile("theme.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x92, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x49, 0x9a, 0x14, 0x76, 0xb2, 0x54, 0xc1, 0xda, 0x83, 0x15, 0x10, 0x2c, 0x39, 0xed,
	0x85, 0x48, 0x04, 0x24, 0x60, 0x4f, 0xa0, 0x15, 0xe2, 0x0a, 0xa1, 0x17, 0x2e, 0x20, 0xab, 0x19,
	0xb5, 0x55, 0x13, 0x27, 0x8a, 0x1d, 0x20, 0xcf, 0xc5, 0xdb, 0xf0, 0x12, 0xbc, 0x02, 0xb2, 0x9d,
	0x52, 0x87, 0x5a, 0x15, 0x12, 0xa7, 0x4c, 0xc6, 0xff, 0xff, 0xcd, 0xe8, 0xb7, 0x21, 0x92, 0x1b,
	0xac, 0x31, 0x6b, 0xbb, 0x46, 0x36, 0xe4, 0xbc, 0xed, 0x50, 0x88, 0xac, 0x6e, 0x4a, 0xac, 0x44,
	0x02, 0x2d, 0x5b, 0x8f, 0x27, 0xe9, 0x4f, 0x1f, 0xc2, 0xa5, 0x52, 0x12, 0x02, 0x41, 0xdf, 0x6f,
	0x4b, 0xea, 0x5d, 0x7a, 0x57, 0x67, 0x85, 0xae, 0x55, 0x8f, 0xb3, 0x1a, 0xa9, 0x6f, 0x7a, 0xaa,
	0x26, 0xaf, 0xe1, 0x4c, 0x62, 0xdd, 0x56, 0x4c, 0xa2, 0xa0, 0x70, 0x39, 0xbb, 0x8a, 0xf2, 0x34,
	0xb3, 0xf9, 0x99, 0xe6, 0x65, 0xcb, 0xbd, 0xe8, 0x2d, 0x97, 0xdd, 0x50, 0x1c, 0x4c, 0xe4, 0x05,
	0xcc, 0x99, 0x10, 0x28, 0x05, 0x8d, 0xb4, 0xfd, 0x91, 0xcb, 0xfe, 0x46, 0x2b, 0x8c, 0x77, 0x94,
	0x27, 0x9f, 0x60, 0x31, 0xa5, 0x92, 0x18, 0x66, 0x3b, 0x1c, 0xc6, 0x9d, 0x55, 0x49, 0x9e, 0x42,
	0xf8, 0x95, 0x55, 0xbd, 0xd9, 0x39, 0xca, 0xef, 0x3b, 0xd8, 0x7b, 0x46, 0x61, 0x94, 0xd7, 0xfe,
	0x4b, 0x2f, 0xf9, 0x08, 0x91, 0x35, 0xd1, 0xc1, 0xcd, 0xa6, 0x5c, 0xea, 0xe0, 0x6a, 0x80, 0x05,
	0x4d, 0x7f, 0xf8, 0x70, 0x77, 0x32, 0xf1, 0x9f, 0x43, 0xbe, 0x80, 0x50, 0xdf, 0x1f, 0x9d, 0xe9,
	0xa6, 0xf9, 0x21, 0x0f, 0x60, 0x8e, 0x7c, 0xbd, 0xe5, 0x48, 0x03, 0xd5, 0xbe, 0x0e, 0x36, 0xb2,
	0xae, 0x8a, 0xb1, 0x47, 0x3e, 0xc0, 0x79, 0x5b, 0xb1, 0x15, 0x6e, 0x9a, 0xaa, 0xc4, 0x4e, 0xd0,
	0x50, 0x87, 0xfb, 0xe4, 0x44, 0x00, 0xd9, 0x7b, 0x4b, 0x6f, 0xa2, 0x9e, 0x20, 0xd4, 0x6a, 0x25,
	0x93, 0x8c, 0x82, 0x59, 0x4d, 0xd5, 0xc9, 0x17, 0xb8, 0x77, 0x64, 0x73, 0xe4, 0xf5, 0x7c, 0x9a,
	0xd7, 0x43, 0xc7, 0x1a, 0x16, 0xc6, 0x4e, 0xed, 0x97, 0x07, 0xf1, 0xdf, 0xe7, 0x7f, 0x42, 0xf2,
	0xac, 0x90, 0xde, 0x41, 0x20, 0x87, 0xd6, 0x4c, 0x58, 0xe4, 0xcf, 0x4e, 0x4f, 0x38, 0x6a, 0x2c,
	0x87, 0x16, 0x0b, 0x0d, 0x20, 0x37, 0x10, 0xad, 0x1a, 0x2e, 0x91, 0x4b, 0xd5, 0xd4, 0x99, 0x2f,
	0xf2, 0xc7, 0x53, 0xde, 0x8d, 0x11, 0xec, 0xbf, 0xda, 0x6d, 0xbb, 0xd2, 0x57, 0x70, 0xe1, 0x1a,
	0x41, 0x22, 0xb8, 0xdd, 0xf3, 0x1d, 0x6f, 0xbe, 0xf1, 0xf8, 0x16, 0x01, 0x98, 0x0b, 0xd9, 0x6d,
	0xf9, 0x3a, 0xf6, 0xc8, 0x1d, 0x08, 0x24, 0x7e, 0x97, 0xb1, 0x9f, 0x7e, 0x06, 0x38, 0x3c, 0xa0,
	0xff, 0x7c, 0x23, 0x8e, 0x2b, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xd6, 0x56, 0x12, 0x0c,
	0x04, 0x00, 0x00,
}
