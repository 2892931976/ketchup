// Code generated by protoc-gen-go.
// source: packages.proto
// DO NOT EDIT!

package packages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PackageType int32

const (
	PackageType_unknown PackageType = 0
	PackageType_theme   PackageType = 1
	PackageType_plugin  PackageType = 2
)

var PackageType_name = map[int32]string{
	0: "unknown",
	1: "theme",
	2: "plugin",
}
var PackageType_value = map[string]int32{
	"unknown": 0,
	"theme":   1,
	"plugin":  2,
}

func (x PackageType) Enum() *PackageType {
	p := new(PackageType)
	*p = x
	return p
}
func (x PackageType) String() string {
	return proto.EnumName(PackageType_name, int32(x))
}
func (x *PackageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PackageType_value, data, "PackageType")
	if err != nil {
		return err
	}
	*x = PackageType(value)
	return nil
}
func (PackageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

type PackageAuthor struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email            *string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Github           *string `protobuf:"bytes,3,opt,name=github" json:"github,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PackageAuthor) Reset()                    { *m = PackageAuthor{} }
func (m *PackageAuthor) String() string            { return proto.CompactTextString(m) }
func (*PackageAuthor) ProtoMessage()               {}
func (*PackageAuthor) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *PackageAuthor) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PackageAuthor) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *PackageAuthor) GetGithub() string {
	if m != nil && m.Github != nil {
		return *m.Github
	}
	return ""
}

type Package struct {
	Type             *PackageType     `protobuf:"varint,1,opt,name=type,enum=ketchup.packages.PackageType" json:"type,omitempty"`
	Name             *string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Authors          []*PackageAuthor `protobuf:"bytes,3,rep,name=authors" json:"authors,omitempty"`
	Description      *string          `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Homepage         *string          `protobuf:"bytes,5,opt,name=homepage" json:"homepage,omitempty"`
	Tags             []string         `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	ReadmeUrl        *string          `protobuf:"bytes,7,opt,name=readme_url,json=readmeUrl" json:"readme_url,omitempty"`
	VcsUrl           *string          `protobuf:"bytes,8,opt,name=vcs_url,json=vcsUrl" json:"vcs_url,omitempty"`
	ScreenshotUrls   []string         `protobuf:"bytes,9,rep,name=screenshot_urls,json=screenshotUrls" json:"screenshot_urls,omitempty"`
	KetchupVersion   *string          `protobuf:"bytes,10,opt,name=ketchup_version,json=ketchupVersion" json:"ketchup_version,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Package) Reset()                    { *m = Package{} }
func (m *Package) String() string            { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()               {}
func (*Package) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *Package) GetType() PackageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PackageType_unknown
}

func (m *Package) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Package) GetAuthors() []*PackageAuthor {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *Package) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Package) GetHomepage() string {
	if m != nil && m.Homepage != nil {
		return *m.Homepage
	}
	return ""
}

func (m *Package) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Package) GetReadmeUrl() string {
	if m != nil && m.ReadmeUrl != nil {
		return *m.ReadmeUrl
	}
	return ""
}

func (m *Package) GetVcsUrl() string {
	if m != nil && m.VcsUrl != nil {
		return *m.VcsUrl
	}
	return ""
}

func (m *Package) GetScreenshotUrls() []string {
	if m != nil {
		return m.ScreenshotUrls
	}
	return nil
}

func (m *Package) GetKetchupVersion() string {
	if m != nil && m.KetchupVersion != nil {
		return *m.KetchupVersion
	}
	return ""
}

type Registry struct {
	RegistryVersion  *string    `protobuf:"bytes,1,opt,name=registry_version,json=registryVersion" json:"registry_version,omitempty"`
	RegistryType     *string    `protobuf:"bytes,2,opt,name=registry_type,json=registryType" json:"registry_type,omitempty"`
	Packages         []*Package `protobuf:"bytes,10,rep,name=packages" json:"packages,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Registry) Reset()                    { *m = Registry{} }
func (m *Registry) String() string            { return proto.CompactTextString(m) }
func (*Registry) ProtoMessage()               {}
func (*Registry) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *Registry) GetRegistryVersion() string {
	if m != nil && m.RegistryVersion != nil {
		return *m.RegistryVersion
	}
	return ""
}

func (m *Registry) GetRegistryType() string {
	if m != nil && m.RegistryType != nil {
		return *m.RegistryType
	}
	return ""
}

func (m *Registry) GetPackages() []*Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

func init() {
	proto.RegisterType((*PackageAuthor)(nil), "ketchup.packages.PackageAuthor")
	proto.RegisterType((*Package)(nil), "ketchup.packages.Package")
	proto.RegisterType((*Registry)(nil), "ketchup.packages.Registry")
	proto.RegisterEnum("ketchup.packages.PackageType", PackageType_name, PackageType_value)
}
func (m *PackageAuthor) SetName(v *string) {
	m.Name = v
}

func (m *PackageAuthor) SetEmail(v *string) {
	m.Email = v
}

func (m *PackageAuthor) SetGithub(v *string) {
	m.Github = v
}

func (m *Package) SetType(v *PackageType) {
	m.Type = v
}

func (m *Package) SetName(v *string) {
	m.Name = v
}

func (m *Package) SetAuthors(v []*PackageAuthor) {
	m.Authors = v
}

func (m *Package) SetDescription(v *string) {
	m.Description = v
}

func (m *Package) SetHomepage(v *string) {
	m.Homepage = v
}

func (m *Package) SetTags(v []string) {
	m.Tags = v
}

func (m *Package) SetReadmeUrl(v *string) {
	m.ReadmeUrl = v
}

func (m *Package) SetVcsUrl(v *string) {
	m.VcsUrl = v
}

func (m *Package) SetScreenshotUrls(v []string) {
	m.ScreenshotUrls = v
}

func (m *Package) SetKetchupVersion(v *string) {
	m.KetchupVersion = v
}

func (m *Registry) SetRegistryVersion(v *string) {
	m.RegistryVersion = v
}

func (m *Registry) SetRegistryType(v *string) {
	m.RegistryType = v
}

func (m *Registry) SetPackages(v []*Package) {
	m.Packages = v
}

func init() { proto.RegisterFile("packages.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x4d, 0x8f, 0x94, 0x40,
	0x10, 0x15, 0x98, 0x19, 0xa0, 0x70, 0x59, 0x52, 0x31, 0xda, 0x9a, 0x6c, 0x24, 0xe3, 0xc1, 0xd5,
	0x03, 0xc9, 0x6e, 0xe2, 0xc1, 0xa3, 0xff, 0x40, 0x89, 0xeb, 0x75, 0xd3, 0xb2, 0x15, 0x20, 0xc3,
	0x47, 0xa7, 0xbb, 0x19, 0x33, 0x3f, 0xc3, 0x5f, 0xe9, 0xdf, 0x30, 0xdd, 0x0d, 0x38, 0x31, 0x99,
	0x5b, 0xd5, 0xab, 0x57, 0xaf, 0x5f, 0xbf, 0x82, 0x54, 0xf0, 0xea, 0xc0, 0x6b, 0x52, 0x85, 0x90,
	0xa3, 0x1e, 0x31, 0x3b, 0x90, 0xae, 0x9a, 0x49, 0x14, 0x0b, 0xbe, 0xff, 0x06, 0x57, 0x5f, 0x5d,
	0xfd, 0x65, 0xd2, 0xcd, 0x28, 0x11, 0x61, 0x33, 0xf0, 0x9e, 0x98, 0x97, 0x7b, 0xb7, 0x71, 0x69,
	0x6b, 0x7c, 0x01, 0x5b, 0xea, 0x79, 0xdb, 0x31, 0xdf, 0x82, 0xae, 0xc1, 0x97, 0xb0, 0xab, 0x5b,
	0xdd, 0x4c, 0x3f, 0x59, 0x60, 0xe1, 0xb9, 0xdb, 0xff, 0xf1, 0x21, 0x9c, 0x35, 0xf1, 0x0e, 0x36,
	0xfa, 0x24, 0x9c, 0x5a, 0x7a, 0x7f, 0x53, 0xfc, 0xff, 0x7e, 0x31, 0x13, 0xbf, 0x9f, 0x04, 0x95,
	0x96, 0xba, 0x1a, 0xf0, 0xcf, 0x0c, 0x7c, 0x86, 0x90, 0x5b, 0x7b, 0x8a, 0x05, 0x79, 0x70, 0x9b,
	0xdc, 0xbf, 0xbd, 0xa8, 0xe4, 0xbe, 0x51, 0x2e, 0x7c, 0xcc, 0x21, 0x79, 0x22, 0x55, 0xc9, 0x56,
	0xe8, 0x76, 0x1c, 0xd8, 0xc6, 0xaa, 0x9e, 0x43, 0xf8, 0x06, 0xa2, 0x66, 0xec, 0x49, 0xf0, 0x9a,
	0xd8, 0xd6, 0x8e, 0xd7, 0xde, 0x98, 0xd1, 0xbc, 0x56, 0x6c, 0x97, 0x07, 0xc6, 0x8c, 0xa9, 0xf1,
	0x06, 0x40, 0x12, 0x7f, 0xea, 0xe9, 0x71, 0x92, 0x1d, 0x0b, 0xed, 0x46, 0xec, 0x90, 0x07, 0xd9,
	0xe1, 0x2b, 0x08, 0x8f, 0x95, 0xb2, 0xb3, 0xc8, 0xe5, 0x72, 0xac, 0x94, 0x19, 0xbc, 0x87, 0x6b,
	0x55, 0x49, 0xa2, 0x41, 0x35, 0xa3, 0x36, 0x73, 0xc5, 0x62, 0x2b, 0x9b, 0xfe, 0x83, 0x1f, 0x64,
	0xa7, 0x0c, 0x71, 0xfe, 0xdd, 0xe3, 0x91, 0xa4, 0x32, 0xb6, 0xc1, 0x2a, 0xa5, 0x33, 0xfc, 0xc3,
	0xa1, 0xfb, 0xdf, 0x1e, 0x44, 0x25, 0xd5, 0xad, 0xd2, 0xf2, 0x84, 0x1f, 0x20, 0x93, 0x73, 0xbd,
	0xae, 0xb9, 0x23, 0x5e, 0x2f, 0xf8, 0xbc, 0x87, 0xef, 0xe0, 0x6a, 0xa5, 0xda, 0xf3, 0xb8, 0xac,
	0x9f, 0x2f, 0xa0, 0xb9, 0x06, 0x7e, 0x82, 0x68, 0xc9, 0x96, 0x81, 0x0d, 0xfd, 0xf5, 0xc5, 0xd0,
	0xcb, 0x95, 0xfa, 0xf1, 0x0e, 0x92, 0xb3, 0x9b, 0x62, 0x02, 0xe1, 0x34, 0x1c, 0x86, 0xf1, 0xd7,
	0x90, 0x3d, 0xc3, 0x18, 0xb6, 0xba, 0xa1, 0x9e, 0x32, 0x0f, 0x01, 0x76, 0xa2, 0x9b, 0xea, 0x76,
	0xc8, 0xfc, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x49, 0xe6, 0x63, 0x17, 0xa6, 0x02, 0x00, 0x00,
}
