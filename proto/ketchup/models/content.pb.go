// Code generated by protoc-gen-go.
// source: content.proto
// DO NOT EDIT!

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ContentTextType int32

const (
	ContentTextType_text     ContentTextType = 0
	ContentTextType_markdown ContentTextType = 1
	ContentTextType_html     ContentTextType = 2
)

var ContentTextType_name = map[int32]string{
	0: "text",
	1: "markdown",
	2: "html",
}
var ContentTextType_value = map[string]int32{
	"text":     0,
	"markdown": 1,
	"html":     2,
}

func (x ContentTextType) Enum() *ContentTextType {
	p := new(ContentTextType)
	*p = x
	return p
}
func (x ContentTextType) String() string {
	return proto.EnumName(ContentTextType_name, int32(x))
}
func (x *ContentTextType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContentTextType_value, data, "ContentTextType")
	if err != nil {
		return err
	}
	*x = ContentTextType(value)
	return nil
}
func (ContentTextType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type ContentMultiple_DropdownType int32

const (
	ContentMultiple_unknown  ContentMultiple_DropdownType = 0
	ContentMultiple_radio    ContentMultiple_DropdownType = 1
	ContentMultiple_dropdown ContentMultiple_DropdownType = 2
)

var ContentMultiple_DropdownType_name = map[int32]string{
	0: "unknown",
	1: "radio",
	2: "dropdown",
}
var ContentMultiple_DropdownType_value = map[string]int32{
	"unknown":  0,
	"radio":    1,
	"dropdown": 2,
}

func (x ContentMultiple_DropdownType) Enum() *ContentMultiple_DropdownType {
	p := new(ContentMultiple_DropdownType)
	*p = x
	return p
}
func (x ContentMultiple_DropdownType) String() string {
	return proto.EnumName(ContentMultiple_DropdownType_name, int32(x))
}
func (x *ContentMultiple_DropdownType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContentMultiple_DropdownType_value, data, "ContentMultiple_DropdownType")
	if err != nil {
		return err
	}
	*x = ContentMultiple_DropdownType(value)
	return nil
}
func (ContentMultiple_DropdownType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0}
}

type ContentMultiple struct {
	Title            *string                       `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Options          []string                      `protobuf:"bytes,2,rep,name=options" json:"options,omitempty"`
	Type             *ContentMultiple_DropdownType `protobuf:"varint,3,opt,name=type,enum=ketchup.models.ContentMultiple_DropdownType,def=2" json:"type,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *ContentMultiple) Reset()                    { *m = ContentMultiple{} }
func (m *ContentMultiple) String() string            { return proto.CompactTextString(m) }
func (*ContentMultiple) ProtoMessage()               {}
func (*ContentMultiple) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

const Default_ContentMultiple_Type ContentMultiple_DropdownType = ContentMultiple_dropdown

func (m *ContentMultiple) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ContentMultiple) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ContentMultiple) GetType() ContentMultiple_DropdownType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ContentMultiple_Type
}

type ContentText struct {
	Title            *string          `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Type             *ContentTextType `protobuf:"varint,2,opt,name=type,enum=ketchup.models.ContentTextType" json:"type,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ContentText) Reset()                    { *m = ContentText{} }
func (m *ContentText) String() string            { return proto.CompactTextString(m) }
func (*ContentText) ProtoMessage()               {}
func (*ContentText) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ContentText) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ContentText) GetType() ContentTextType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ContentTextType_text
}

type ContentString struct {
	Title            *string          `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Type             *ContentTextType `protobuf:"varint,2,opt,name=type,enum=ketchup.models.ContentTextType" json:"type,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ContentString) Reset()                    { *m = ContentString{} }
func (m *ContentString) String() string            { return proto.CompactTextString(m) }
func (*ContentString) ProtoMessage()               {}
func (*ContentString) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ContentString) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ContentString) GetType() ContentTextType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ContentTextType_text
}

func init() {
	proto.RegisterType((*ContentMultiple)(nil), "ketchup.models.ContentMultiple")
	proto.RegisterType((*ContentText)(nil), "ketchup.models.ContentText")
	proto.RegisterType((*ContentString)(nil), "ketchup.models.ContentString")
	proto.RegisterEnum("ketchup.models.ContentTextType", ContentTextType_name, ContentTextType_value)
	proto.RegisterEnum("ketchup.models.ContentMultiple_DropdownType", ContentMultiple_DropdownType_name, ContentMultiple_DropdownType_value)
}
func (m *ContentMultiple) SetTitle(v *string) {
	m.Title = v
}

func (m *ContentMultiple) SetOptions(v []string) {
	m.Options = v
}

func (m *ContentMultiple) SetType(v *ContentMultiple_DropdownType) {
	m.Type = v
}

func (m *ContentText) SetTitle(v *string) {
	m.Title = v
}

func (m *ContentText) SetType(v *ContentTextType) {
	m.Type = v
}

func (m *ContentString) SetTitle(v *string) {
	m.Title = v
}

func (m *ContentString) SetType(v *ContentTextType) {
	m.Type = v
}

func init() { proto.RegisterFile("content.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x14, 0xc4, 0xeb, 0xb4, 0x55, 0x9b, 0xd7, 0x3f, 0x58, 0x16, 0x43, 0x36, 0xa2, 0x4c, 0x11, 0x42,
	0x1e, 0x28, 0x13, 0x2b, 0x4c, 0x48, 0x2c, 0xa1, 0x03, 0x62, 0xab, 0x1a, 0x8b, 0x5a, 0x71, 0xfc,
	0x2c, 0xf7, 0x45, 0x6d, 0x3f, 0x1f, 0x5f, 0x0c, 0x25, 0x75, 0x2b, 0x40, 0xea, 0xc6, 0x78, 0x3e,
	0xfb, 0xee, 0x77, 0x86, 0xd9, 0x1a, 0x2d, 0x29, 0x4b, 0xd2, 0x79, 0x24, 0x14, 0xf3, 0x4a, 0xd1,
	0x7a, 0xd3, 0x38, 0x59, 0x63, 0xa9, 0xcc, 0x36, 0xfb, 0x62, 0x70, 0xf5, 0x74, 0xbc, 0xf1, 0xda,
	0x18, 0xd2, 0xce, 0x28, 0x71, 0x0d, 0x43, 0xd2, 0x64, 0x54, 0xc2, 0x52, 0x96, 0xc7, 0xc5, 0x51,
	0x88, 0x04, 0x46, 0xe8, 0x48, 0xa3, 0xdd, 0x26, 0x51, 0xda, 0xcf, 0xe3, 0xe2, 0x24, 0xc5, 0x0b,
	0x0c, 0xe8, 0xe0, 0x54, 0xd2, 0x4f, 0x59, 0x3e, 0xbf, 0xbf, 0x93, 0xbf, 0x2b, 0xe4, 0x9f, 0x78,
	0xf9, 0xec, 0xd1, 0x95, 0xb8, 0xb3, 0xcb, 0x83, 0x53, 0x8f, 0xe3, 0x32, 0xa8, 0xa2, 0xcb, 0xc8,
	0x1e, 0x60, 0xfa, 0xd3, 0x17, 0x13, 0x18, 0x35, 0xb6, 0xb2, 0xb8, 0xb3, 0xbc, 0x27, 0x62, 0x18,
	0xfa, 0x55, 0xa9, 0x91, 0x33, 0x31, 0x85, 0xf3, 0x4b, 0x1e, 0x65, 0xef, 0x30, 0x09, 0x2d, 0x4b,
	0xb5, 0xa7, 0x0b, 0x03, 0x16, 0x01, 0x33, 0xea, 0x30, 0x6f, 0x2e, 0x60, 0xb6, 0x01, 0x6d, 0x73,
	0xe0, 0xf9, 0x80, 0x59, 0x30, 0xde, 0xc8, 0x6b, 0xfb, 0xf9, 0x8f, 0xd9, 0xb7, 0x8b, 0xf3, 0xd7,
	0x9f, 0x0c, 0x31, 0x86, 0x01, 0xa9, 0x3d, 0xf1, 0x5e, 0x3b, 0xb0, 0x5e, 0xf9, 0xaa, 0x1b, 0xc8,
	0xda, 0xf3, 0x0d, 0xd5, 0x86, 0x47, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xea, 0x82, 0x2c,
	0xd0, 0x01, 0x00, 0x00,
}
