// Code generated by protoc-gen-go.
// source: page.proto
// DO NOT EDIT!

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Timestamp struct {
	CreatedAt        *int64 `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt        *int64 `protobuf:"varint,2,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Timestamp) Reset()                    { *m = Timestamp{} }
func (m *Timestamp) String() string            { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()               {}
func (*Timestamp) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Timestamp) GetCreatedAt() int64 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

func (m *Timestamp) GetUpdatedAt() int64 {
	if m != nil && m.UpdatedAt != nil {
		return *m.UpdatedAt
	}
	return 0
}

type Page struct {
	Uuid             *string           `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Title            *string           `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Theme            *string           `protobuf:"bytes,3,opt,name=theme" json:"theme,omitempty"`
	Template         *string           `protobuf:"bytes,4,opt,name=template" json:"template,omitempty"`
	Timestamps       *Timestamp        `protobuf:"bytes,5,opt,name=timestamps" json:"timestamps,omitempty"`
	PublishedAt      *int64            `protobuf:"varint,6,opt,name=published_at,json=publishedAt" json:"published_at,omitempty"`
	Contents         []*Content        `protobuf:"bytes,10,rep,name=contents" json:"contents,omitempty"`
	Metadata         map[string]string `protobuf:"bytes,11,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags             []string          `protobuf:"bytes,12,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *Page) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Page) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Page) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *Page) GetTemplate() string {
	if m != nil && m.Template != nil {
		return *m.Template
	}
	return ""
}

func (m *Page) GetTimestamps() *Timestamp {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *Page) GetPublishedAt() int64 {
	if m != nil && m.PublishedAt != nil {
		return *m.PublishedAt
	}
	return 0
}

func (m *Page) GetContents() []*Content {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *Page) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Page) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// versioned? drafts?
type Content struct {
	Uuid       *string    `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Key        *string    `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value      *string    `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	Timestamps *Timestamp `protobuf:"bytes,5,opt,name=timestamps" json:"timestamps,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*Content_Short
	//	*Content_Text
	//	*Content_Multiple
	Type             IsContent_Type `protobuf_oneof:"type"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

type IsContent_Type interface {
	IsContent_Type()
}

type Content_Short struct {
	Short *ContentString `protobuf:"bytes,11,opt,name=short,oneof"`
}
type Content_Text struct {
	Text *ContentText `protobuf:"bytes,12,opt,name=text,oneof"`
}
type Content_Multiple struct {
	Multiple *ContentMultiple `protobuf:"bytes,13,opt,name=multiple,oneof"`
}

func (*Content_Short) IsContent_Type()    {}
func (*Content_Text) IsContent_Type()     {}
func (*Content_Multiple) IsContent_Type() {}

func (m *Content) GetType() IsContent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Content) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Content) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Content) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Content) GetTimestamps() *Timestamp {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *Content) GetShort() *ContentString {
	if x, ok := m.GetType().(*Content_Short); ok {
		return x.Short
	}
	return nil
}

func (m *Content) GetText() *ContentText {
	if x, ok := m.GetType().(*Content_Text); ok {
		return x.Text
	}
	return nil
}

func (m *Content) GetMultiple() *ContentMultiple {
	if x, ok := m.GetType().(*Content_Multiple); ok {
		return x.Multiple
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Content) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Content_OneofMarshaler, _Content_OneofUnmarshaler, _Content_OneofSizer, []interface{}{
		(*Content_Short)(nil),
		(*Content_Text)(nil),
		(*Content_Multiple)(nil),
	}
}

func _Content_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Content)
	// type
	switch x := m.Type.(type) {
	case *Content_Short:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Short); err != nil {
			return err
		}
	case *Content_Text:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Text); err != nil {
			return err
		}
	case *Content_Multiple:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Multiple); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Content.Type has unexpected type %T", x)
	}
	return nil
}

func _Content_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Content)
	switch tag {
	case 11: // type.short
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContentString)
		err := b.DecodeMessage(msg)
		m.Type = &Content_Short{msg}
		return true, err
	case 12: // type.text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContentText)
		err := b.DecodeMessage(msg)
		m.Type = &Content_Text{msg}
		return true, err
	case 13: // type.multiple
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContentMultiple)
		err := b.DecodeMessage(msg)
		m.Type = &Content_Multiple{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Content_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Content)
	// type
	switch x := m.Type.(type) {
	case *Content_Short:
		s := proto.Size(x.Short)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Content_Text:
		s := proto.Size(x.Text)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Content_Multiple:
		s := proto.Size(x.Multiple)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "ketchup.models.Timestamp")
	proto.RegisterType((*Page)(nil), "ketchup.models.Page")
	proto.RegisterType((*Content)(nil), "ketchup.models.Content")
}
func (m *Timestamp) SetCreatedAt(v *int64) {
	m.CreatedAt = v
}

func (m *Timestamp) SetUpdatedAt(v *int64) {
	m.UpdatedAt = v
}

func (m *Page) SetUuid(v *string) {
	m.Uuid = v
}

func (m *Page) SetTitle(v *string) {
	m.Title = v
}

func (m *Page) SetTheme(v *string) {
	m.Theme = v
}

func (m *Page) SetTemplate(v *string) {
	m.Template = v
}

func (m *Page) SetTimestamps(v *Timestamp) {
	m.Timestamps = v
}

func (m *Page) SetPublishedAt(v *int64) {
	m.PublishedAt = v
}

func (m *Page) SetContents(v []*Content) {
	m.Contents = v
}

func (m *Page) SetMetadata(v map[string]string) {
	m.Metadata = v
}

func (m *Page) SetTags(v []string) {
	m.Tags = v
}

func (m *Content) SetUuid(v *string) {
	m.Uuid = v
}

func (m *Content) SetKey(v *string) {
	m.Key = v
}

func (m *Content) SetValue(v *string) {
	m.Value = v
}

func (m *Content) SetTimestamps(v *Timestamp) {
	m.Timestamps = v
}

func init() { proto.RegisterFile("page.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x91, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x9b, 0x26, 0x5d, 0x93, 0x93, 0x56, 0x64, 0x10, 0x1c, 0x2b, 0x8b, 0x31, 0x57, 0xbd,
	0x0a, 0xb8, 0x22, 0xf8, 0x07, 0x85, 0x2a, 0x42, 0xbd, 0x58, 0x90, 0x71, 0xef, 0x65, 0x6c, 0x0e,
	0x49, 0xd8, 0xfc, 0x19, 0x92, 0x13, 0xd9, 0xbe, 0x80, 0xef, 0xe3, 0x1b, 0xca, 0x4c, 0x66, 0x43,
	0x5b, 0xda, 0xab, 0xbd, 0x3b, 0xe7, 0x7c, 0xdf, 0xef, 0x30, 0xe7, 0x1b, 0x00, 0x25, 0x33, 0x4c,
	0x54, 0xdb, 0x50, 0xc3, 0x1e, 0xdf, 0x22, 0x6d, 0xf3, 0x5e, 0x25, 0x55, 0x93, 0x62, 0xd9, 0x2d,
	0x17, 0xdb, 0xa6, 0x26, 0xac, 0x69, 0x90, 0xe3, 0xef, 0x10, 0xdc, 0x14, 0x15, 0x76, 0x24, 0x2b,
	0xc5, 0x2e, 0x01, 0xb6, 0x2d, 0x4a, 0xc2, 0xf4, 0x97, 0x24, 0xee, 0x44, 0xce, 0xca, 0x15, 0x81,
	0x9d, 0xac, 0x49, 0xcb, 0xbd, 0x4a, 0xef, 0xe5, 0xe9, 0x20, 0xdb, 0xc9, 0x9a, 0xe2, 0xbf, 0x2e,
	0x78, 0x3f, 0x64, 0x86, 0x8c, 0x81, 0xd7, 0xf7, 0x45, 0x6a, 0x16, 0x04, 0xc2, 0xd4, 0xec, 0x29,
	0xcc, 0xa8, 0xa0, 0x12, 0x0d, 0x16, 0x88, 0xa1, 0x31, 0xd3, 0x1c, 0x2b, 0xe4, 0xae, 0x9d, 0xea,
	0x86, 0x2d, 0xc1, 0x27, 0xac, 0x54, 0x29, 0x09, 0xb9, 0x67, 0x84, 0xb1, 0x67, 0xef, 0x01, 0xe8,
	0xfe, 0xbd, 0x1d, 0x9f, 0x45, 0xce, 0x2a, 0xbc, 0x7a, 0x9e, 0x1c, 0xde, 0x98, 0x8c, 0x17, 0x89,
	0x3d, 0x33, 0x7b, 0x05, 0x73, 0xd5, 0xff, 0x2e, 0x8b, 0x2e, 0x1f, 0x0e, 0xb8, 0x30, 0x07, 0x84,
	0xe3, 0x6c, 0x4d, 0xec, 0x0d, 0xf8, 0x36, 0x9e, 0x8e, 0x43, 0xe4, 0xae, 0xc2, 0xab, 0x67, 0xc7,
	0xbb, 0xbf, 0x0e, 0xba, 0x18, 0x8d, 0xec, 0x33, 0xf8, 0x15, 0x92, 0x4c, 0x25, 0x49, 0x1e, 0x1a,
	0x28, 0x3e, 0x86, 0x74, 0x2c, 0xc9, 0xb5, 0x35, 0x7d, 0xab, 0xa9, 0xdd, 0x89, 0x91, 0xd1, 0x71,
	0x91, 0xcc, 0x3a, 0x3e, 0x8f, 0x5c, 0x1d, 0x97, 0xae, 0x97, 0x1f, 0x61, 0x71, 0x60, 0x67, 0x4f,
	0xc0, 0xbd, 0xc5, 0x9d, 0x8d, 0x54, 0x97, 0x3a, 0xbb, 0x3f, 0xb2, 0xec, 0xc7, 0x44, 0x4d, 0xf3,
	0x61, 0xfa, 0xce, 0x89, 0xff, 0x4d, 0xe1, 0x91, 0x7d, 0xe6, 0xc9, 0xbf, 0xb0, 0xbb, 0xdc, 0x13,
	0xbb, 0xbc, 0xbd, 0x5d, 0x0f, 0xc9, 0xfa, 0x2d, 0xcc, 0xba, 0xbc, 0x69, 0x89, 0x87, 0x86, 0xba,
	0x3c, 0x93, 0xe2, 0x4f, 0x6a, 0x8b, 0x3a, 0xdb, 0x4c, 0xc4, 0xe0, 0x66, 0xaf, 0xc1, 0x23, 0xbc,
	0x23, 0x3e, 0x37, 0xd4, 0x8b, 0x33, 0xd4, 0x0d, 0xde, 0xd1, 0x66, 0x22, 0x8c, 0x95, 0x7d, 0x02,
	0xbf, 0xea, 0x4b, 0x2a, 0x54, 0x89, 0x7c, 0x61, 0xb0, 0x97, 0x67, 0xb0, 0x6b, 0x6b, 0xdb, 0x4c,
	0xc4, 0x88, 0x7c, 0xb9, 0x00, 0x8f, 0x76, 0x0a, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x33, 0x2c,
	0xa7, 0xb1, 0x33, 0x03, 0x00, 0x00,
}
